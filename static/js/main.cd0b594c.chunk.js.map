{"version":3,"sources":["components/Question.module.css","components/Start.module.css","components/AnswerItem.module.css","components/QuestionItem.module.css","adventure.svg","components/AnswerItem.js","components/QuestionItem.js","actions/dataActions.js","components/Question.js","components/Start.js","background.png","winners.svg","components/Result.js","App.js","reportWebVitals.js","reducers/rootReducer.js","index.js"],"names":["module","exports","AnswerItem","id","letter","text","onSelected","className","sheet","container","data-eid","onClick","e","currentTarget","QuestionItem","data","onCompleted","onNext","answerSelected","target","children","parentElement","btn","nextSibling","firstChild","i","length","child","classList","add","remove","parseInt","answer","dataset","eid","style","display","setTimeout","list","answers","map","index","name","showFlag","hasFlag","flag","src","question","alt","capital","questionContainer","answerContainer","nextContainer","previousSibling","resetEffects","button","updateStarted","value","type","Question","handleCompleted","message","score","props","newScore","updateScore","updateStatus","handleNext","generateQuestion","logo","adventure","this","Component","connect","state","console","log","currQuestion","dispatch","Start","onStart","previousElementSibling","logoSlide","btnFade","setAnimations","Result","result","onRestart","flexContainer","winners","resultText","scoreText","btnNoMargin","App","handleOnStart","val","changeStatus","handleRestart","resetQuiz","img","Image","bg","onload","document","querySelector","backgroundImage","localStorage","getItem","axios","get","then","setItem","JSON","stringify","addData","parse","show","started","height","status","resetScore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","generateRandomArray","a","num","Math","floor","random","splice","push","newData","slice","array","temporaryValue","randomIndex","currentIndex","shuffle","rootReducer","action","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd0b594c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Question_container__2UBTM\",\"logo\":\"Question_logo__2S69c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Start_container__1ok4d\",\"flexContainer\":\"Start_flexContainer__2ML__\",\"logo\":\"Start_logo__1bxp7\",\"logoSlide\":\"Start_logoSlide__3OQ7e\",\"slideUp\":\"Start_slideUp__3nlXP\",\"result\":\"Start_result__rhDPf\",\"scoreText\":\"Start_scoreText__2G2zZ\",\"resultText\":\"Start_resultText__3CxL-\",\"score\":\"Start_score__grmxP\",\"btn\":\"Start_btn__17BjI\",\"btnNoMargin\":\"Start_btnNoMargin__WV49V\",\"btnFade\":\"Start_btnFade__3La1n\",\"fadeDown\":\"Start_fadeDown__15N2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AnswerItem_container__1vbFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionContainer\":\"QuestionItem_questionContainer__XIzZN\",\"answerContainer\":\"QuestionItem_answerContainer__3GcYF\",\"flag\":\"QuestionItem_flag__2s_A3\",\"nextContainer\":\"QuestionItem_nextContainer__1lba4\",\"button\":\"QuestionItem_button__3-Gx-\"};","export default __webpack_public_path__ + \"static/media/adventure.182b6171.svg\";","import React from 'react';\nimport sheet from './AnswerItem.module.css';\n\nconst AnswerItem = ({ id, letter, text, onSelected }) => {\n    return (\n        <div className={sheet.container+' show'} data-eid={id} onClick={(e)=>{onSelected(e.currentTarget, id)}}>\n            <span>{ letter }</span>\n            <span>{ text }</span>\n        </div>\n    );\n}\n\nexport default AnswerItem;\n","import React from 'react';\nimport AnswerItem from './AnswerItem';\nimport sheet from './QuestionItem.module.css';\n\nconst QuestionItem = ({ data, onCompleted, onNext }) => {\n\n    function answerSelected(target, id) {\n        let children = target.parentElement.children;\n        let btn = target.parentElement.nextSibling.firstChild;\n        \n\n        for (let i = 0; i < children.length; i++) {\n            let child = children[i];\n            child.classList.add('no-hover');\n            child.classList.remove('show')\n        }\n\n        if(id === parseInt(data.answer)){\n            for (let i = 0; i < children.length; i++) {\n                let child = children[i];\n                if(parseInt(child.dataset.eid) === id){\n                    child.classList.add('is-good');\n                }\n            }\n            onCompleted('success')\n            btn.style.display = 'block';\n        }else{\n            for (let i = 0; i < children.length; i++) {\n                let child = children[i];\n                if(parseInt(child.dataset.eid)  === id){\n                    child.classList.add('is-bad');\n                }\n                if(parseInt(child.dataset.eid)  === data.answer){\n                    child.classList.add('is-good');\n                }\n            }\n            setTimeout(() => {\n                onCompleted('failed');\n            }, 1500);\n        }\n    }\n\n    function resetEffects(target){\n        let children = target.parentElement.previousSibling.children;\n        for(let i = 0; i < children.length; i++){\n            let child = children[i];\n            child.classList.remove('no-hover','is-good','is-bad', 'show');\n            child.style.display = 'none';\n        }\n        onNext();\n        target.style.display = 'none';\n        for(let i = 0; i < children.length; i++){\n            let child = children[i];\n            child.style.display = 'flex';\n            child.classList.add('show');\n        }\n    }\n\n    const list = data.answers.map((answer, index) => {\n        const letters = ['A','B','C','D'];\n        return (\n            <AnswerItem key={answer.id} letter={letters[index]}\n             text={answer.name} id={answer.id} \n             onSelected={answerSelected}/> \n        )\n    });\n\n    const showFlag = data.hasFlag ? \n    ( <img className={sheet.flag} src={data.question.flag} alt=\"flag\"/> ) \n    : null;\n\n    const question = data.hasFlag ? (\n        <span>Which country does this flag belong to ?</span>\n    ) : (\n        <span>{data.question.capital+' is the capital of'}</span>\n    );\n\n    return (\n        <div>\n            <div className={sheet.questionContainer}>\n                { showFlag }\n                { question }\n            </div>\n            <div className={sheet.answerContainer}>\n                { list }\n            </div>\n            <div className={sheet.nextContainer}>\n                <button onClick={(e) => resetEffects(e.currentTarget)} style={{display : 'none'}} className={sheet.button}>Next</button>\n            </div>\n        </div>\n    );\n}\n\nexport default QuestionItem;\n","export const addData = (data) => {\n    return {\n        type : 'ADD_DATA',\n        data : data\n    }\n}\n\nexport const updateStarted = (value) => {\n    return {\n        type : 'UPDATE_STATUS',\n        value : value\n    }\n}\n\nexport const generateQuestion = () => {\n    return {\n        type : 'GENERATE_QUESTION'\n    }\n}\nexport const updateScore = (score) => {\n    return {\n        type : 'UPDATE_SCORE',\n        score : score\n    }\n}\n\nexport const resetScore = (value) => {\n    return {\n        type : 'RESET_SCORE',\n        score : value\n    }\n}","import React, { Component } from 'react';\nimport sheet from './Question.module.css';\nimport adventure from '../adventure.svg';\nimport QuestionItem from './QuestionItem';\nimport { connect } from 'react-redux';\nimport { generateQuestion, updateStarted, updateScore} from '../actions/dataActions';\n\nclass Question extends Component {\n\n    handleCompleted = (message) => {\n        if(message === 'success'){\n            //success load next question\n            let score = this.props.score;\n            let newScore = parseInt(score) + 1;\n            this.props.updateScore(newScore);\n        }else{\n            //failed we stop ad show result\n            this.props.updateStatus(2);\n        }\n    }\n\n    handleNext = () => {\n        this.props.generateQuestion();\n    }\n\n    render() {\n        return (\n            <div className={sheet.container}>\n                <img className={sheet.logo} src={adventure} alt=\"logo\"/>\n                <QuestionItem data={this.props.data} onCompleted={this.handleCompleted} onNext={this.handleNext}/>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateScore : (value) => {\n            dispatch(\n                updateScore(value)\n            )\n        },\n        updateStatus : (value) => {\n            dispatch(\n                updateStarted(value)\n            )\n        },\n        generateQuestion : () => {\n            dispatch(\n                generateQuestion()\n            )\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        data : state.currQuestion,\n        score : state.score\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);\n","import React from 'react';\nimport sheet from './Start.module.css';\nimport adventure from '../adventure.svg';\n\nconst Start = ({ onStart }) => {\n\n    function setAnimations(e) {\n        const btn = e.currentTarget;\n        const img = e.currentTarget.previousElementSibling;\n        img.classList.add(sheet.logoSlide);\n        btn.classList.add(sheet.btnFade);\n        setTimeout(() => {\n            onStart(1);\n        }, 1500);\n    }\n\n    return (\n        <div className={sheet.container}>\n            <img className={sheet.logo} src={adventure} alt=\"logo\"/>\n            <button className={sheet.btn} onClick={(e) => {setAnimations(e)}}>\n                Start\n            </button>\n        </div>\n    );\n}\n\nexport default Start;\n","export default __webpack_public_path__ + \"static/media/background.41dbc550.png\";","export default __webpack_public_path__ + \"static/media/winners.d76bfdf8.svg\";","import React from 'react';\nimport sheet from './Start.module.css';\nimport winners from '../winners.svg';\n\nconst Result = ({ result ,onRestart }) => {\n\n    console.log(result);\n\n    function setAnimations(e) {\n        const btn = e.currentTarget;\n        const img = e.currentTarget.previousElementSibling;\n        img.classList.add(sheet.logoSlide);\n        btn.classList.add(sheet.btnFade);\n        setTimeout(() => {\n            onRestart(1);\n        }, 1500);\n    }\n    \n    return (\n        <div className={sheet.flexContainer+' show'}>\n            <img src={winners} alt=\"logo\"/>\n            <h1 className={sheet.result}>Results</h1>\n            <div className={sheet.resultText}>\n                <span className={sheet.scoreText}>You got </span>\n                <span className={sheet.score}>{ result }</span>\n                <span className={sheet.scoreText}> correct answers</span>\n            </div>\n            \n            <button className={sheet.btn+' '+sheet.btnNoMargin} onClick={(e) => {setAnimations(e)}}>\n                Try again\n            </button>\n        </div>\n    );\n}\n\nexport default Result;\n","import React, { Component } from \"react\";\nimport Question from \"./components/Question\";\nimport Start from \"./components/Start\";\nimport bg from './background.png';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { addData, updateStarted, generateQuestion, resetScore } from './actions/dataActions';\nimport Result from \"./components/Result\";\n\nclass App extends Component {\n\n  componentDidMount(){\n    let img = new Image();\n    img.src = bg;\n    img.onload = (e) => {\n      document.querySelector('#root').style.backgroundImage = img.src;\n    };\n\n    if(localStorage.getItem('data') === null){\n      axios.get('https://restcountries.com/v2/all?fields=name,capital,flag').then((value) => {\n        localStorage.setItem('data', JSON.stringify(value.data));\n      });\n      this.props.addData(JSON.parse(localStorage.getItem('data')));\n    }else{\n      this.props.addData(JSON.parse(localStorage.getItem('data')));\n    }\n  } \n\n  handleOnStart = (val) => {\n    this.props.changeStatus(val);\n  }\n\n  handleRestart = () => {\n    this.props.resetQuiz(0, 1);\n  }\n\n  render() {\n    const show = this.props.started === 1 ? (\n      <Question/>\n    ) : (\n      this.props.started === 0 ? (\n      <Start onStart={this.handleOnStart} /> ) \n      : (\n        <Result result={this.props.score} onRestart={this.handleRestart} />\n      )\n    );\n\n    return (\n      <>\n        <span style={{ height : 10 }}></span>\n        <div className='container'>\n          <h1>country quiz</h1>\n          { show }\n        </div>\n        <footer>\n          Ralph Placide @ Devchallenges.io\n        </footer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    started : state.started,\n    currQuestion : state.currQuestion,\n    score : state.score\n  }    \n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addData : (data) => {\n      dispatch (\n        addData(data)\n      );\n      dispatch(\n        generateQuestion()\n      )\n    },\n    changeStatus : (value) => {\n      dispatch (\n        updateStarted(value)\n      )\n    },\n    resetQuiz : (value, status) => {\n      dispatch(\n        resetScore(value, status)\n      );\n      dispatch(\n        updateStarted(status)\n      )\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\n    started : 0,\n    data : [],\n    currQuestion : null,\n    score : 0\n}\n\nfunction shuffle(array){\n    var currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 < currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\nfunction generateRandomArray(state){\n    let data = [];\n    console.log(state);\n    let a = [...state.data];\n    for (let i = 0; i < 5; i++) {\n      let num = Math.floor(Math.random() * a.length - 5);\n      let name = a.splice(num, 1)[0];\n      if(name.capital === ''){\n        let num = Math.floor(Math.random() * a.length - 5);\n        name = a.splice(num, 1)[0];\n      }\n      name.id = i;\n      data.push(name);\n    }\n    let newData = [...data];\n    let question = newData.slice(1, 2);\n    let answers = shuffle(newData.slice(1, newData.length));\n    let type = Math.floor(Math.random() * 10) % 2 === 0 ? false : true;\n\n    return {\n        answer : question[0].id,\n        question : question[0],\n        answers : answers,\n        hasFlag : type\n    }\n  }\n\nconst rootReducer = (state = initState, action) => {\n  if(action.type === 'ADD_DATA'){\n      return {\n          ...state,\n          data : action.data\n      }\n  }\n  if(action.type === 'UPDATE_STATUS'){\n      return {\n          ...state,\n          started : action.value\n      }\n  }\n  if(action.type === 'GENERATE_QUESTION'){\n      return {\n          ...state,\n          currQuestion : generateRandomArray(state)\n      }\n  }\n  if(action.type === 'UPDATE_SCORE'){\n    return {\n      ...state,\n      score : action.score\n    }\n  }\n  if(action.type === 'RESET_SCORE'){\n    return {\n      ...state,\n      score : action.score\n    }\n  }\n\n  return state;\n}\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}